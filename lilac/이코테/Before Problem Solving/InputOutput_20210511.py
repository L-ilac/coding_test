import sys
input(): 한줄의 문자열을 입력받는다.(Enter(줄바꿈)으로 문자열의 끝을 구분함.) 입력받은 문자열을 상황에 맞게 자료형을 변경해야함.
Ex. int(input())

list(map(int, input().split())): input() 으로 입력받은 문자열을 split()으로 공백기준으로 나누어 리스트로 저장하고, map()으로 리스트의 모든 원소에 int() 를 적용하고, 해당 결과를 list()로 리스트로 저장한다.
! 구분자가 줄 바꿈인지 공백인지를 구분해야함.

* 그냥 map() 함수의 결과값은 'map' 자료형임. list() 처리를 해줘야함.

신기한 데이터 저장법: a, b, c = 10, 20, 30 (a=10, b=20, c=30 와 동일)


# 입력 개수가 많은 경우
# 한 줄씩 입력받음. text 파일과 같은 여러줄로 이루어진 데이터를 입력받아 한줄 씩 처리하고 싶을 때 사용. 여러줄의 입력값을 넣고 싶을 때는, 반복문을 이용하여 입력받으면 됌.
sys.stdin.readline().rstrip()

-> rstrip() 은 1줄 씩 읽을때 마지막에 붙은 줄바꿈 기호를 없애기 위한 것
readline 함수는 자동으로 입력값 뒤에 '\n' 을 붙임. 그래서 없애줘야함.

! 문자열과 숫자를 같이 출력하는 경우, 숫자를 문자열로 바꾸어 = > str(숫자)  출력해야하거나 콤마를 기준으로 구분하여 출력하면 됌(이때도 똑같이 숫자는 문자열로 바꿔야함). 콤마를 사용하면 변수의 값 사이에 공백이 삽입됌.

f-string 문법(자료형 변환 없이 문자열과 정수를 같이 출력하는법)
age = 10
print(f"I am {age}years old.")
