1. 구현이란 '머릿속에 있는 알고리즘을 소스코드로 바꾸는 과정'이다.

2.부동소수점(실수) 계산은 오차가 있을 수 있다.

3. 메모리 제한을 염두에 두고 코딩할 것.
int 기준 : 1,000개 -> 4KB, 1,000,000개 -> 4MB, 10,000,000개 -> 40MB 

4. 자신의 코드가 1초에 2000만번의 연산을 수행한다고 가정하고 문제를 풀면 실행 시간 제한에 안정적임.
Ex. time complexity가 O(nlogn) 일때, 데이터 갯수가 100만개면 연산 횟수가 2000만번임. 즉 데이터 갯수가 100만개고 실행시간이 1초면 O(nlogn)의 알고리즘을 구현해야함.

5. 일반적으로 방향을 설정해서 이동하는 문제 유형에서는 dx, dy라는 별도의 리스트를 만들어 방향을 정하는 것이 효과적임.

6. 동일한 기능을 반복하는 코드들을 적당히 모아서 함수로 정의할 수 있다면, 해볼 것.

7. 생각보다 시간이 오래걸리니, 빠르게 구현할 수 있는 부분은 빠르게 구현할 수 있도록 연습할 것.

탐색해야할 데이터가 100만개 이하라면 완전탐색을 사용하면 적절할 수 있음

8. 완전 탐색을 위해서 때로는 주어진 행렬을 확장해야할수도 있다는 점 생각할 것.